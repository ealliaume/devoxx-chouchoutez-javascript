-- STEP #0 --
 
Créer un "faux" projet avec tous les fichiers / lib nécessaires :
 
    * underscore.js
    * jasmine.js
    * exemples tests   
    * jsTestDriver.conf   
    * coverage.jar   
 
 
 
-- STEP #1 --
 
mvn archetype:generate
    -> type 52 (à checker)
 
Import dans Eclipse
 
mvn test
 
 
-- STEP #2 --
 
Copie underscore.js dans src/main/javascript
 
Création src/test/javascript/underscore_test.js
 
Création 1er test :
 
    describe("Test d'underscore", function() {
       
                it("should return 42 when asked for last item", function() {
                                var res = _.last([1,2,3,42]);
                                expect(res).toBe(42);
                });
               
    });
 
mvn test
 
 
-- STEP #3 --
 
Création d'autres tests
 
    describe("Test d'underscore", function() {
               
                var myarray;
               
                beforeEach(function() {
                                myarray = [1, 2, 3];
                });
               
                it("should return 42 when asked for last item", function() {
                                var res = _.last([1,2,3,42]);
                               expect(res).toBe(42);
                });
               
                it("be true", function() {
                                var res = _.first([1, 2, 3]);
                                expect(res == 1).toBeTruthy();
                });
               
                it("should be greater than 2", function() {
                                expect(3).toBeGreaterThan(2);
                });
               
                it("should contains 2", function() {
                                expect([1, 2, 3]).toContain(2);
                });
   
                it("should have size of 3", function() {
                                expect(myarray.length).toBe(3);
                });
               
                it("should not be 1", function() {
                                var res = _.max([1, 2]);
                                expect(res).not.toBe(1);
                })
               
    });
 
Détails Matchers via URL : http://pivotal.github.com/jasmine/jsdoc/symbols/jasmine.Matchers.html
 
Création d'un Spy :
 
    describe("test with spy", function() {
       
                it("should spy on last", function() {
                                spyOn(_, 'last');
                                var res = _.last([1, 2, 3]);
                                expect(_.last).toHaveBeenCalled();
                                expect(res).toBeUndefined();
                });
               
    });
 
 
-- STEP #4 --
 
Ajout dans pom.xml :
 
    <properties>
        <sonar.language>js</sonar.language>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
    </properties>
 
    [build]
        <sourceDirectory>src/main/javascript</sourceDirectory>
        <testSourceDirectory>src/test/javascript</testSourceDirectory>
 
mvn clean package sonar:sonar
 
 
-- STEP #5 --
 
Commenter le plugin jasmine-maven-plugin in pom.xml
 
Créer un répertoire lib, et y copier :
    * jasmine.js
    * JasmineAdapter.js
    * coverage-1.3.4.b.jar       
 
 
Créer un jsTestDriver.conf à la racine du projet, avec le contenu suivant :
 
server: http://localhost:9876

load:
  - "lib/jasmine.js"
  - "lib/JasmineAdapter.js"
  - "src/main/javascript/*.js"
  - "src/test/javascript/*.js"

 
Ajouter dans le pom.xml :
 
    <dependencies>
        <dependency>
            <groupId>com.googlecode.jstd-maven-plugin</groupId>
            <artifactId>jstd-maven-plugin</artifactId>
            <version>1.3.2.5</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
 
    <build>
        <plugins>
            <plugin>
                <groupId>com.googlecode.jstd-maven-plugin</groupId>
                <artifactId>jstd-maven-plugin</artifactId>
                <version>1.3.2.5</version>
                <configuration>
                    <port>9876</port>
                    <browser>/Applications/Firefox.app/Contents/MacOS/firefox-bin</browser>
                    <tests>all</tests>
                    <config>jsTestDriver.conf</config>
                    <testOutput>target/jstestdriver</testOutput>
                </configuration>
                <executions>
                    <execution>
                        <id>run-tests</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

  <repositories>
        <repository>
            <id>jstd-maven-plugin google code repo</id>
            <url>http://jstd-maven-plugin.googlecode.com/svn/maven2</url>
        </repository>
  </repositories>
  <pluginRepositories>
        <pluginRepository>
            <id>jstd-maven-plugin google code repo</id>
            <url>http://jstd-maven-plugin.googlecode.com/svn/maven2</url>
        </pluginRepository>
  </pluginRepositories>
 
mvn clean test

Ajout dans jsTestDriver.conf

plugin:
  - name: "coverage"
    jar: "lib/coverage-1.3.4.b.jar"
    module: "com.google.jstestdriver.coverage.CoverageModule"



 
mvn clean package sonar:sonar
